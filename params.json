{"name":"Die","body":"### Application and asset management to *die* for.\r\n\r\n## Features\r\n\r\n### Razor-sharp Express DSL\r\nDie supports a [Zappa-ish][zappa] DSL for Express:\r\n\r\n    die = require('die')\r\n        base: __dirname\r\n\r\n    app = die.createServer ->\r\n      @set 'view options'\r\n        layout: false\r\n\r\n      @get '/', ->\r\n        @render 'index'\r\n\r\n      @get '/json', ->\r\n        @json\r\n          x: 1\r\n          y: 2\r\n          z: 3\r\n\r\n### CommonJS module support\r\nUse CommonJS modules *in the browser* (courtesy of [Browserify][browserify]):\r\n\r\n    class HomeView extends Backbone.View\r\n      template: require './templates/home'\r\n      render: ->\r\n        @$el.html @template()\r\n        @\r\n\r\nHere we are requiring a [Jade][jade] template (which is compiled to an optimized function) in our [Backbone][backbone] view.\r\n\r\n### Stylus with nib and Bootstrap baked in\r\nModernize your CSS with [Stylus][stylus]! [Bootstrap][bootstrap] and [nib][nib] baked in:\r\n\r\n    // everything\r\n    @import 'bootstrap'\r\n\r\n    // only config and forms\r\n    @import 'bootstrap/config'\r\n    @import 'bootstrap/forms'\r\n\r\n    h1\r\n      font-size 20px\r\n\r\n### Awesome testing with Mocha\r\n[Mocha][mocha] has emerged as the best-in-class JavaScript test framework, and Die supports it out of the box.\r\n\r\n### Multi-app support\r\nBy default each app created by Die is reusable by other [Die][die]/[Express][express] apps. Example configuration:\r\n\r\n    die = require('die')\r\n      base: __dirname\r\n\r\n    app = die.createServer ->\r\n      @use '/app2', require 'app2'\r\n      @use '/app3', require 'app3'\r\n      @use '/app4', require 'app4'\r\n\r\n    module.exports = app\r\n\r\nEach app can of course require other apps recursively.\r\n\r\n### Project Templates\r\nNever write boilerplate code again, take advantage of Die's project templates.\r\nStructure your projects however you like, each file in a template folder will be treated as a Mustache template\r\nand can be passed any sort of arbitrary variables when creating a new project with `die new`. Check out the\r\n[default templates][templates] for examples.\r\n\r\n## Usage\r\nCreate new project based off template:\r\n\r\n    die new <name> [--template <template name>, --install, --production]\r\n\r\nServe project (or just static files):\r\n\r\n    die run\r\n\r\nCompile client-side assets:\r\n\r\n    die build\r\n\r\nCan also be used to build stand-alone CSS and JavaScript assets:\r\n\r\n    die build --minify --css [in] --css-path [out] --js [in] --js-path [out]\r\n\r\nCompile & watch client-side assets, recompiling on change:\r\n\r\n    die watch\r\n\r\nRun tests:\r\n\r\n    die test\r\n\r\n[backbone]: http://backbonejs.org/\r\n[bootstrap]: http://twitter.github.com/bootstrap/\r\n[browserify]: https://github.com/substack/node-browserify\r\n[express]: http://expressjs.com/\r\n[jade]: http://jade-lang.com/\r\n[mocha]: https://visionmedia.github.com/mocha/\r\n[nib]: https://github.com/visionmedia/nib\r\n[stylus]: http://learnboost.github.com/stylus/\r\n[templates]: https://github.com/zeekay/die/tree/master/templates\r\n[zappa]: https://github.com/mauricemach/zappa\r\n","tagline":"Application and asset management to die for.","note":"Don't delete this file! It's used internally to help with page regeneration.","google":""}