// Generated by CoffeeScript 1.3.3
var help, path, pkg, program;

path = require('path');

program = require('commander');

pkg = require('../package.json');

program.version(pkg.version).usage('[command] [options]');

program.command('build').description('  assemble project').option('-o, --output [dir]', 'output dir').option('-m, --minify', 'minify output').option('--css [in]', 'CSS entrypoint').option('--css-path [out]', 'path to compiled CSS').option('--js [in]', 'Javascript entrypoint').option('--js-path [out]', 'path to compiled Javascript').action(function(opts) {
  var Die, app, k, v;
  Die = require('./die');
  opts = {
    dist: opts.output,
    css: opts.css,
    cssPath: opts.cssPath,
    main: opts.js,
    jsPath: opts.jsPath,
    minify: opts.minify || true
  };
  for (k in opts) {
    v = opts[k];
    if (!v) {
      delete opts[k];
    }
  }
  app = new Die(opts);
  return app.build();
});

program.command('new [name]').description('  create new project').usage('[name] [options]').option('-t, --template [name]', 'template to use').option('-c, --config [config.json]', 'configuration file to supply context variables from').action(function(name, opts) {
  if (opts == null) {
    opts = {};
  }
  if (!name) {
    return console.log('Name of project is required');
  }
  return require('./create')(name, opts);
});

program.command('run').description('  serve project').option('-p, --port [number]', 'port to run server on').action(function(opts) {
  if (opts.port) {
    process.env.PORT = opts.port;
  }
  return require('./index').run();
});

program.command('test').description('  run tests').action(function() {
  return require('./test')();
});

program.command('watch').description('  watch for changes and rebuild project').action(function() {
  var die;
  die = require('./index');
  return require('./watch')(die);
});

help = function() {
  return console.log(program.helpInformation());
};

program.parse(process.argv);

if (!program.args.length) {
  help();
}

if (!program.args[0].name) {
  help();
}
